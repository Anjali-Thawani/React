1️⃣ What is NPM?

✅ NPM is a packet manager that is used to manage all the library and package, 
   there is no full-form of it.NPM primarily used for managing dependencies in projects.

2️⃣ What is Parcel-Webpack? why do we need it

✅ Parcel is a fast, zero-configuration web application bundler. 
   It simplifies the setup process by automatically analyzing your 
   project's structure and handling tasks like bundling.

   There are several features of webpack:-
   - Zero config
   - Dev server
   - Hot reloading modulation [HMR]
   - Reliable caching
   - Uses Tree shaking Algorithm
   - Minification
   - Image optimization
   - Code splitting
   - Content hashing

3️⃣ What is .parcel-cache file

✅ The .parcel-cache directory is a folder created by the Parcel bundler to 
   store temporary files that help speed up the build process of your web application.

   -  By storing cached files, Parcel can quickly determine which parts of your 
       project have changed 
  
4️⃣ what is npx?

✅ npx is a command that is use to execute the package.

5️⃣ What is difference between dependencies and dev-dependencies
✅  
| Aspect            | Dependencies                           | DevDependencies                           |
|-------------------|----------------------------------------|-------------------------------------------|
| Purpose           | Required for application in production |  Needed for development tasks             |
| Installation      | Installed by default                   | Not installed by default                  |
| Usage             | Required for application runtime       | Used during development tasks             |
| Examples          | Express, React, Lodash                 | Jest, Babel, ESLint                       |

6️⃣ What is Tree Shaking?
 
# ✅ Tree shaking is a technique used in modern JavaScript bundlers, such as Webpack and Rollup, to eliminate unused code from your final bundle. The term "tree shaking" comes from the concept of shaking a tree to remove  leaves while keeping the healthy ones.

# Here's how tree shaking works:

⭐ Static Analysis: The bundler analyzes the static import and export statements 
                   in your JavaScript code during the bundling process.

⭐ Module Level Optimization: Tree shaking operates at the level of individual modules. 
                              If a module exports multiple functions, classes, or variables, 
                              but only some of them are used in your application, only the 
                              used parts will be included in the final bundle. 
                              Unused exports and their dependencies are removed.

7️⃣ What is HMR?

✅ Hot Module Replacement (HMR) is a feature in modern JavaScript bundlers that 
   automatically updates changes in your code without refreshing the entire web page.

8️⃣ What is .gitignore file ? what should we add and not add into it

✅ .gitignore file is used to add files those are secure, and re-generative for example node_modules and
   .env files
   while keeping file inside .gitignore we should only add those file which are auto genrative like cache, dist, node_modules.

9️⃣ What is difference between package.json and package.lock.json?

# ✅ package.json:
▶️ This file is where you define the metadata for your project.
▶️ It includes information such as the project name, version, description, 
   author, license, and most importantly, the list of dependencies required by your project.
▶️ You manually edit this file to add, remove, or update dependencies.

# ✅ package-lock.json:
▶️ This file is automatically generated by npm.
▶️ It keeps track of the exact versions of dependencies and their sub-dependencies 
  that were installed,along with their dependency tree.
▶️ This ensures that when someone else installs the dependencies for the project, 
  they get the exact same versions as you did, thus ensuring consistency across different environments.
▶️ It's not meant to be manually edited and is typically used for reproducible builds.

1️⃣0️⃣ Why should i not modify package.lock.json?

✅ As we know that package.lock.jso file contains exact version of your dependency 
   and it is auto-generated by npm so if you do minor update to it and next time when you run npm i all the
   content will auto load and replace by the newer version or dependencies.

1️⃣1️⃣ What is node_modules? is it good idea to push that on git?

# ✅ node_modules is a directory where Node.js stores all the libraries (dependencies) 
#    of your project needs to run. It's like a storage space for these libraries.

It's generally not a good idea to push node_modules to Git because:

# Size: 
      It can be very large and make your Git repository slow and cumbersome.
# Reproducibility: 
      You can easily recreate node_modules on another computer using package.json and package-lock.json (or yarn.lock).
# Security: 
      Including it in Git doesn't make your project more secure and might expose vulnerabilities if dependencies are outdated.

# So, it's best to keep node_modules out of Git by adding it to your .gitignore file. This way, your Git repository stays lean and you can still share your project without including all those libraries.

1️⃣2️⃣ What is the dist folder?

✅ The "dist" folder, short for "distribution," is a common convention in 
   software development for storing files that are ready for distribution or deployment. 

▶️ It typically contains the compiled, minified, or bundled files of your project, 
  optimized for production use.

Here's what you might find in a "dist" folder:

# Compiled Code: If your project involves compiling code (such as TypeScript to JavaScript, or SCSS to CSS), the resulting compiled files are often placed in the "dist" folder.

# Minified Code: Minification is the process of removing unnecessary characters from code (like whitespace and comments) to reduce its size. Minified versions of your JavaScript, CSS, or other files are often stored in the "dist" folder.

# Bundled Code: If your project uses bundlers like Webpack or Parcel, the bundled files (which combine multiple source files into one or a few files for efficiency) are typically outputted to the "dist" folder.

# Optimized Assets: Images, fonts, or other assets may be optimized (compressed or resized) for performance and placed in the "dist" folder.

# Index or Entry Points: The main entry points of your application or website may reside in the "dist" folder, ready to be served to users.

1️⃣3️⃣ What is browserslist?

✅ Browserslist is a tool that lets you specify which web browsers and versions you want your CSS and JavaScript code to support. You define this list in a configuration file, and tools like Autoprefixer and Babel use it to automatically adjust your code to work well across those browsers.

# Added it in package.json files like:-
  last 2 Firefox versions, last 2 Chrome versions